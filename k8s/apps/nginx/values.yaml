nginx:
  global:
    imageRegistry: ""
    ## E.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
    ## Security parameters
    ##
    security:
      ## @param global.security.allowInsecureImages Allows skipping image verification
      ##
      allowInsecureImages: true
    ## Compatibility adaptations for Kubernetes platforms
    ##
    compatibility:
      ## Compatibility adaptations for Openshift
      ##
      openshift:
        ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
        ##
        adaptSecurityContext: auto
  ## @section Common parameters

  ## @param nameOverride String to partially override nginx.fullname template (will maintain the release name)
  ##
  nameOverride: ""
  ## @param fullnameOverride String to fully override nginx.fullname template
  ##
  fullnameOverride: ""
  ## @param namespaceOverride String to fully override common.names.namespace
  ##
  namespaceOverride: ""
  ## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
  ##
  kubeVersion: ""
  ## @param clusterDomain Kubernetes Cluster Domain
  ##
  clusterDomain: cluster.local
  ## @param commonLabels Add labels to all the deployed resources
  ##
  commonLabels: {}
  ## @param commonAnnotations Add annotations to all the deployed resources
  ##
  commonAnnotations: {}
  ## Enable diagnostic mode in the deployment(s)/statefulset(s)
  ##
  diagnosticMode:
    ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
    ##
    enabled: false
    ## @param diagnosticMode.command Command to override all containers in the the deployment(s)/statefulset(s)
    ##
    command:
      - sleep
    ## @param diagnosticMode.args Args to override all containers in the the deployment(s)/statefulset(s)
    ##
    args:
      - infinity
  ## @section NGINX parameters

  ## Bitnami NGINX image version
  ## ref: https://hub.docker.com/r/bitnami/nginx/tags/
  ## @param image.registry [default: REGISTRY_NAME] NGINX image registry
  ## @param image.repository [default: REPOSITORY_NAME/nginx] NGINX image repository
  ## @skip image.tag NGINX image tag (immutable tags are recommended)
  ## @param image.digest NGINX image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param image.pullPolicy NGINX image pull policy
  ## @param image.pullSecrets Specify docker-registry secret names as an array
  ## @param image.debug Set to true if you would like to see extra information on logs
  ##
  image:
    registry: docker.io
    repository: oreplay/backend
    tag: 0.2.21
    digest: ""
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## E.g.:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Set to true if you would like to see extra information on logs
    debug: false
  enableDefaultInitContainers: false
  automountServiceAccountToken: false
  ## @param hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## Command and args for running the container (set to default if not set). Use array form
  ## @param command Override default container command (useful when using custom images)
  ## @param args Override default container args (useful when using custom images)
  ##
  command:
    - /bin/sh
    - -c
    - php-fpm7.4 && nginx -g 'daemon off;'
  args: []
  ## @param extraEnvVars Extra environment variables to be set on NGINX containers
  extraEnvVars:
    - name: DEBUG
      value: "0"
    - name: UNUSED_1
      value: "0"
    - name: UNUSED_2
      value: "0"
  ## @param extraEnvVarsCM ConfigMap with extra environment variables
  extraEnvVarsCM: ""
  ## @param extraEnvVarsSecret Secret with extra environment variables
  extraEnvVarsSecret: "secrets-main-app"
  ## @section NGINX deployment parameters

  ## @param replicaCount Number of NGINX replicas to deploy
  replicaCount: 1
  ## @param revisionHistoryLimit The number of old history to retain to allow rollback
  revisionHistoryLimit: 10
  ## @param updateStrategy.type NGINX deployment strategy type
  ## @param updateStrategy.rollingUpdate NGINX deployment rolling update configuration parameters
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ##
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: {}
  ## @param podLabels Additional labels for NGINX pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param podAnnotations Annotations for NGINX pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node affinity preset
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: ""
    ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param affinity Affinity for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param hostNetwork Specify if host network should be enabled for NGINX pod
  ##
  hostNetwork: false
  ## @param hostIPC Specify if host IPC should be enabled for NGINX pod
  ##
  hostIPC: false
  ## DNS-Pod services
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
  ## @param dnsPolicy Specifies the DNS policy for the NGINX pod
  ## DNS policies can be set on a per-Pod basis. Currently Kubernetes supports the following Pod-specific DNS policies.
  ## Available options: Default, ClusterFirst, ClusterFirstWithHostNet, None
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
  dnsPolicy: ""
  ## @param dnsConfig  Allows users more control on the DNS settings for a Pod. Required if `dnsPolicy` is set to `None`
  ## The dnsConfig field is optional and it can work with any dnsPolicy settings.
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config
  ## E.g.
  ## dnsConfig:
  ##   nameservers:
  ##     - 192.0.2.1 # this is an example
  ##   searches:
  ##     - ns1.svc.cluster-domain.example
  ##     - my.dns.search.suffix
  ##   options:
  ##     - name: ndots
  ##       value: "2"
  ##     - name: edns0
  dnsConfig: {}
  ## @param nodeSelector Node labels for pod assignment. Evaluated as a template.
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param tolerations Tolerations for pod assignment. Evaluated as a template.
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param priorityClassName NGINX pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param terminationGracePeriodSeconds In seconds, time the given to the NGINX pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  ## The value is evaluated as a template
  ##
  topologySpreadConstraints: []
  ## TLS settings
  tls:
    enabled: false
  ## NGINX pods' Security Context.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  podSecurityContext:
    enabled: false
  ## NGINX containers' Security Context.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  containerSecurityContext:
    enabled: false
  ## Configures the ports NGINX listens on
  containerPorts:
    http: "80"
    https: ""
  extraContainerPorts: []
  resourcesPreset: "nano"
  resources:
    requests:
      cpu: 7m
      memory: 100M
    limits:
      cpu: 900m
      memory: 200M
  ## NGINX containers' lifecycleHooks
  ## ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
  lifecycleHooks: {}
  ## NGINX containers' startup probe.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  startupProbe:
    enabled: false
  ## NGINX containers' liveness probe.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  livenessProbe:
    enabled: false
  ## NGINX containers' readiness probe.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  readinessProbe:
    enabled: false
  customStartupProbe: {}
  customLivenessProbe:
    httpGet:
      path: /api/v1/ping/pong
      port: 80
  customReadinessProbe:
    httpGet:
      path: /api/v1/ping/pong
      port: 80
  ## Autoscaling parameters
  ## @param autoscaling.enabled Enable autoscaling for NGINX deployment
  ## @param autoscaling.minReplicas Minimum number of replicas to scale back
  ## @param autoscaling.maxReplicas Maximum number of replicas to scale out
  ## @param autoscaling.targetCPU Target CPU utilization percentage
  ## @param autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: false
    minReplicas: ""
    maxReplicas: ""
    targetCPU: ""
    targetMemory: ""
  extraVolumes: []
  extraVolumeMounts: []
  ## Pods Service Account
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
    create: false
  sidecars: []
  ## @param sidecarSingleProcessNamespace Enable sharing the process namespace with sidecars
  ## This will switch pod.spec.shareProcessNamespace parameter
  sidecarSingleProcessNamespace: false
  initContainers: []
  ## Pod Disruption Budget configuration
  pdb:
    create: false
  ## @section Custom NGINX application parameters

  ## Get the server static content from a git repository
  ## NOTE: This will override staticSiteConfigmap and staticSitePVC
  cloneStaticSiteFromGit:
    enabled: false
  serverBlock: ""
  existingServerBlockConfigmap: ""
  existingStreamServerBlockConfigmap: ""
  staticSiteConfigmap: ""
  staticSitePVC: ""

  ## NGINX Service properties
  service:
    type: ClusterIP
    ports:
      http: 80
    targetPort:
      http: 80
  ## Network Policies
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  networkPolicy:
    enabled: false
  ##
  ingress:
    enabled: false
  ## Health Ingress parameters
  healthIngress:
    enabled: false

  ## Prometheus Exporter / Metrics
  metrics:
    enabled: false
